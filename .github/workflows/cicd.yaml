name: Test, Build, and Deploy

on:
  push:
    branches:
      - main

env:
  PGUSER: ${{ secrets.PGUSER }}
  PGPASSWORD: ${{ secrets.PGPASSWORD }}
  PGDATABASE: ${{ secrets.PGDATABASE }}
  PGPORT: ${{ secrets.PGPORT }}
  PGHOST: ${{ secrets.PGHOST }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  MAILING_EMAIL: ${{ secrets.MAILING_EMAIL }}
  MAILING_PASSWORD: ${{ secrets.MAILING_PASSWORD }}
  SIGNUP_SESSION_COOKIE_SECRET: ${{ secrets.SIGNUP_SESSION_COOKIE_SECRET }}
  PASSWORD_RESET_SESSION_COOKIE_SECRET: ${{ secrets.PASSWORD_RESET_SESSION_COOKIE_SECRET }}
  

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'

      - name: Clean install dependencies
        run: npm ci

      - name: Setup Postgres with DB
        uses: harmon758/postgresql-action@v1
        with:
          postgresql db: $PGDATABASE
          postgresql user: $PGUSER
          postgresql password: $PGPASSWORD


      - name: Populate DB with test data
        run: |
          sudo service postgresql start
          PGPASSWORD=$PGPASSWORD psql -U $PGUSER -d $PGDATABASE -q -f "./${PGDATABASE}_database_backup.sql"
      
      - name: Excecute tests
        env:
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: PGUSER=$PGUSER PGPASSWORD=$PGPASSWORD PGDATABASE=$PGDATABASE PGPORT=$PGPORT JWT_SECRET=$JWT_SECRET MAILING_EMAIL=$MAILING_EMAIL MAILING_PASSWORD=$MAILING_PASSWORD SIGNUP_SESSION_COOKIE_SECRET=$SIGNUP_SESSION_COOKIE_SECRET PASSWORD_RESET_SESSION_COOKIE_SECRET=$PASSWORD_RESET_SESSION_COOKIE_SECRET TEST_USER_PASSWORD=$TEST_USER_PASSWORD npm run test
